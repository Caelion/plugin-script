image::../images/script_screenshot1.JPG[]

==== Definition
Dieses Plugin ist ein bisschen wie ein in Jeedom Integrierter "Werkzeugkasten" , es ist eines der Kommunikationsverbindungen von/nach außen.
Ich werde Teile anhand konkreter Beispiele aus meiner persönlichen Erfahrung erklären, und funktionelle Schreib dieses Wiki, erkläre wie man aus den vielen Möglichkeiten das Beste nutzt.

==== Allgemeines

Es ermöglicht unter Jeedom folgende Dateitypen zum Programmieren zu nutzen php(.php), python(.py), ruby(.rb) und das Shell-Skript(.sh)
Jeedom stützt sich auf die Namens-Endung, um die Skripts auszuführen. 


==== Liste und Definition der verfügbaren Optionen

- In diesem (trockenen) Teil erkläre ich jeden Parameter , um so umfangreiche wie möglich zu sein, es werden Beispiele folgen. 
- Das Namensfeld : Es ist keines von den komplizierten Felder, da in diesem der Name eingetragen wird, den Sie dem skript geben wollen
- Das Symbolfeld : Das ist auch kein komplizirtes Feld, weil es ermöglicht Ihren Namen mit einem Symbol zu verbinden,(in diesem Fall ersetzt Jeedom den Namen durch das Symbol im Armaturenbrett) 
- Das Feld typisiert das Script :  4 mögliche Optionen
* Der http Typ : Sie können eine Anfrage an ein externes Gerät senden, ohne notwendigerweise auf die Rückkehr des Befehl zu warten. Das Beispiel, das auf http Bezug nimmt, wird eine Anforderung an ein Vera Gerät sein das Licht einschaltet.
* Der script Typ : dient hauptsächlich dazu, in Jeedom intern Scripte zu verwenden.  Das Beispiel, das dem Script als Stütze dienen wird, wird auf dem markt die Konfiguration der Temperaturüberwachung des verfügbaren Raspberrys sein. 
* Der XML Typ : es ermöglicht, Informationen in XML von einem entfernten Gerät kodiert abzurufen. Das Beispiel, ein XML-Konfigurationsskript auf das Bezug genommen wird, wird ein Öko-Gerät befragen
* Der JSON Typ : erlaubt es, JSON codierte Information von einem entfernten Gerät zurück zu senden. Das JSON Beispiel, ist ein Setup-Skript um Sickbeard (oder XBMC) abzufragen.

===== Das Feld Typ

- 1. Wahl: Die Infowahl
Diese Wahl besteht darin, Jeedom anzuzeigen, dass sie eine Information des Skrips erhalten soll (oder nicht).
Die Optionen "digital","biniär" oder "andere" wird verwendet, um Rückmeldung zu geben.
Hinweis: wenn das Feld "Selbstaktualisierung" leer ist, ist die Standard Aktualisierung in Jeedom 5 Minuten! 

- 2. Wahl: die Aktionswahl 
Diese Wahl besteht darin, Jeedom anzuzeigen, dass sie eine Information im Skript schicken soll. 

===== Das Feld Untertyp
- Der zugehörige Untertyp "défaut" : nichts besonderes
- Der zugehörige Untertyp "slider" : permet de récupérer de Jeedom vers le script une valeur numérique "slidée" par l'utilisateur
- Der zugehörige Untertyp "message" und "title" : permet de récupérer de Jeedom vers le script un texte (plutôt 2) saisi par l'utilisateur
- Der zugehörige Untertyp "couleur" : permet de récupérer de Jeedom vers le script un code couleur (au format HTML) saisi par l'utilisateur

===== Das Abfrage Feld
- In diesem Feld muss die Anwendung selbst oder der Pfad des Skripts enthalten, wenn das Feld "Skript-Typ" ein Script ist.
Die Schaltfläche "Durchsuchen" : ermöglicht die innere Datei in Jeedom enthaltene Datei , auszuwählen.
TIPS :  
 Diese Datei ist in SSH verfügbar /usr/share/nginx/www/jeedom/plugins/script/core/ressources/
 Pour info, la commande SSH pour attribuer les droits www-data à un fichier est : sudo chown www-data:www-data NOMDUSCRIPT.EXTENSION. Das heißt, um ein Skript auszuführen, muss www-data Rechte haben.
- Die Schaltfläche "bearbeiten" : ermöglicht die Bearbeitung mit Hilfe eines internen Code-Editor der im Verzeichnis für den Dateizugriff Code enthaltenen Dateien.
- Die Schaltfläche "Nouveau" : ermöglicht eine Befehlsdatei zu erstellen.
TIPS : 
 Vergessen Sie nicht, den Dateinamen und die Dateiendung einzugeben, damit euer schönes Skript funktioniert. Ohne Dateiendung wird Jeedom nicht wissen, welche Sprache die jeweilige Datei benutzt. CF: Allgemein
-Die Schaltfläche "Löschen" : erlaubt eine Befehlsdatei zu entfernen.
-Die Schaltfläche "Teilen" : einer der größten, und nach bestätigen der Allgemeinen Geschäftsbedingungen für Entwickler in Ihrem Profil auf dem Markt, können Sie Ihre Kreation mit der Gemeinschaft teilen. 

===== Das Feld Optionen
Feld in den veränderlichen Optionen die Wahl des Typs des Skrips entsprechen. 

===== Die Wahl http
Wenn die Auswahl von script type "http" ist
 
- ein Kontrollkästchen "SSL nicht überprüfen" : si cochée, permet à Jeedom de ne pas envoyer les champs "Utilisateur" et "Mot de passe" à la requête. Jeedom ne cherchera pas à s'identifier au site/machine distant.
- ein Kontrollkästchen "Lassen Sie leere Antwort" : si cochée, permet à Jeedom de ne pas attendre de réponse, ou d'ignorer toute réponse à la trame émise. En général, on coche si Jeedom nous insulte d'un "Curl error : Empty reply from server"
- ein Kontrollkästchen "Nie wieder Fehler" : ???
- ein Feld "Zeitüberschreitungen" : ohne informiert zu werden, ist das Zeitlimit der Anwendung standardmäßig auf 2 Sekunden, wenn der Wert nicht eingegeben wird 
- ein Feld "höchstens Versuche" : maximal 4 Fehlversuche
- ein Feld "Benutzername" : um einen Benutzernamen zu informieren 
- ein Feld "Passwort" : um ein Passwort zu informieren

===== Die XML Wahl

- das Optionsfeld hat ein Feld "URL der XML-Datei" : dieses Feld enthält also die URL zu der fraglichen XML Datei der beherbergenden Maschine 

===== Die JSON Wahl

- das Optionsfeld hat	ein Feld "URL der JSON-Datei" : dieses Feld enthält also die URL zu der fraglichen JSON-Datei der beherbergenden Maschine

==== Das Verschidene Feld

- Ein Feld "Unit" : Dadurch wird die physikalische Einheit mit dem Wert (W, KW, V, A, lux, km / h, ...) zugeordnet, um die zugehörigen Widgets anzuzeigen
- Ein Feld "Min" und "Max" : passt die Skalen auf den Widgets an

==== http Beispiel : Steuerung eines Vera
Das Beispiel basiert auf einer Vera,das ermöglicht eine dimmbare Lampe zu steuern.
Je ne vais pas m'étendre sur la manière de piloter une Vera par requête http, le forum TLD est rempli de réponses.
Außerdem, entspricht das Beispiel meinem Geräte Typ und sollte an den ihren angepasst werden. 
TIPS : 

- Une méthode pour ceux qui tâtonnent pour l'écriture de requêtes http, valider d'abord la syntaxe dans votre navigateur et seulement ensuite passer à la configuration sous Jeedom.
- Wenn ein Aktions Skript nicht funktioniert, schalten Sie auf Skript Info/Sonstige dann können Sie sehen, welche Fehler zurückgegeben werden.
 
Gehen wir  :

-  Gerät erzeugen : zum Beispiel LUM CUISINE (Ich denke, dass wir alle eine Küche haben)
-  Es ist mit einem übergeordneten Objekt zugeordnet : zum Beispiel VERA, erlaubt mir, alle Befehle zu VERA auf einen einzigen übergeordneten Zusammenhang zu zentralisieren.
-  Wählen Sie Ihre Kategorie
-  Aktivieren Sie ihn, haken nicht sichtbar ab , man wird ein bisschen später sehen wie mann ihn virtuell verbindet (plus sexy plus WAF) 
-  Pour l'auto-actualisation, ne rien mettre, il s'agit d'une commande impulsionnelle liée à un appui sur un bouton ou un scénario !
-  einen Skript-Befehl hinzufügen
-  Denken Sie daran, zu speichern

Erläuterungen :

- Name : 100 % wenn man ein Licht voller Leistung anmachen möchte
- Skripttyp : http
- TYP : Aktion (Das ist ein Befehl)
-	Untertyp : Standard
-	ANFRAGE :  (piochée sur le forum TLD): http://<IP_VERA>:3480/data_request?id=lu_action&output_format=json&DeviceNum=12&serviceId=urn:upnp-org:serviceId:Dimming1&action=SetLoadLevelTarget&newLoadlevelTarget=100

TIPS : le "100" à la fin de la requête correspond au pourcentage de puissance à affecter donc mettre "0" à la fin de la requête correspond à éteindre l'ampoule

Mit der "Test" Taste können Sie Ihre Befehle testen!

Vous pouvez donc multiplier les commandes dans le même équipement en mettant par exemple une commande à 60% pour une lumière tamisée, créer une troisième à 30% pour les déplacements nocturnes à associer dans un scénario, ...

=====  eine virtuelle Assoziation
Lorsque vous aurez multiplié les scripts, il sera intéressant de regrouper les actions.
zum Beispiel : in einem einzigen Knopf auf dem Amaturenbrett alle Ordnungen von Löschen oder von Halt von jedem Gerät zusammenfassen 
Fassen Sie dafür in einem virtuellen Gerät alle Infos zusammen! 

==== Beispiel 2 : Senden Sie eine Benachrichtigung an XBMC
- Ergebnis : Mitteilung an XBMC Senden beim Öffnen einer Tür.

* Name : XBMC Schalten
*  Skripttyp : http
*  TYP : Aktion (Das ist ein Befehl)
*  Untertyp : Standard
*  ANFRAGE :  (aus dem internet laden): link:http://maison-et-domotique.com/books/xbmc-afficher-des-notifications-domotiques/[source] http://IP_DE_XBMC:8080/jsonrpc?request={%22jsonrpc%22:%222.0%22,%22method%22:%22GUI.ShowNotification%22,%22params%22:{%22title%22:%22Mouvement%20Detecté%22,%22message%22:%22Porte%20Entrée%22},%22id%22:1}
A vous de tester ça dans un scénario par exemple !

XBMC API : link:http://wiki.xbmc.org/index.php?title=JSON-RPC_API/v6[içi] (Nur die markierten Felder "unverzichtbar" sind Pflichtfelder)     

- Zweck : Benachrichtigung an XBMC senden, wenn die Temperatur unter einen bestimmten Schwellenwert sinkt  

Nehmen wir das Beispiel oben :
* ersetzen "Mouvement%20Détecté" mit "Risque%20de%20gel" 
* ersetzen "Porte%20Entrée" mit "Température%20extérieur%20:%20#[EXTERIEUR][EXTERIEUR][TEMPERATURE]#%20" 

Test mit einem Skript #[EXTERIEUR][EXTERIEUR][TEMPERATURE]# < z.B. 15 

Aktion : Starten Sie das Skript mit einem virtuellem Gerät, um Ihr Skript zu verwenden!   

==== Skripttyp : skript
Das Sympathischste aber nicht das Einfachste, das zu erklären ist. 

Voraussetzung: nämlich ein Skript in PHP, Python oder Ruby zu entwickeln.

Das Raspberry Temperaturüberwachung Skript dient als Beispiel für die Verwendung solcher Skripte : Skript

Nach dem herunterladen des Skripts aus dem Markt, können Sie auf die Schaltfläche "Durchsuchen" gehen um die temp_rasp.php Datei auszuwählen.


Aus reiner Neugier, können Sie sich den Inhalt der Datei ansehen, indem Sie auf die Schaltfläche "Bearbeiten" gehen, dann sollten Sie diesen Code erhalten :

Dies ist ein php Skript, das außerhalb von Jeedom wieder verwendet werden kann! 

----
 <?php   
    $temp = shell_exec("cat /sys/class/thermal/thermal_zone0/temp");
    $temp = $temp / 1000;
    $temp = round($temp,1);
    echo $temp
 ?>  
---- 
Hinweis : Das ist konkret die php Funktion "Echo", die die Variable, #state#, für das mit dem Befehl verbundene widget verwendet! 

Jeedom Ansichtskonfiguration:

Einzelheiten : Der numerische Untertyp erlaubt es, einen numerischen Wert, von Jeedom zu verfolgen!

===== Die Parameter

- Die Infos von Jeedom zurückbekommen, um sie in einem Skript auszunutzen. Die Rückgewinnung hängt von der Art des Skript ab :  

Beispiel : 

-  im Link : /usr/share/nginx/www/jeedom/plugins/script/core/ressources/MON_SCRIPT_PHP.php list , l'argument "list" est une chaine de caractère (fixe) récupérée dans le script php grâce à la fonction suivante $argv[1] cf : Google pour plus de détails sur la récupération de paramêtre en PHP
-  Wir haben zuvor gesehen, dass es möglich war, in Jeedom dynamische Werte zurückzubekommen.  
* im Link : /usr/share/nginx/www/jeedom/plugins/script/core/ressources/radio.py VOL #slider# , l'argument "#slider#" est récupéré de cette façon argv[2]. Au moment de l'exécution du script par jeedom, il remplacera automatiquement #slider# par la valeur (numérique) du slider. cf : Google pour plus de détails sur la récupération de paramètre en Python.
* Plus fort : Potenziell sind alle zugänglichen Variablen von Jeedom vom Skript Plugin verwertbar:
Sie wollen die Temperaturwerte von der Küche aus der Chronik außerhalb von Jeedom erhalten!
Passer #[CUISINE][CUISINE][Température]# comme paramètre au script et Jeedom le remplacera par la valeur lue lors de l'envoi.

TIPS :Loïc befürwortet, die Parameter auf diese Art im php Skript zu testen: 

----
 if (isset($argv)) {
     foreach ($argv as $arg) {
         $argList = explode('=', $arg);
         if (isset($argList[0]) && isset($argList[1])) {
             $_GET[$argList[0]] = $argList[1];
         }
     }
 } 
----

==== Skript Typ : XML

je vous soumets les indications de Loïc sur l'utilisation du plugin.

Quelle : link:https://forum.jeedom.fr/viewtopic.php?f=58&t=417&hilit=xml&start=10#p6425[içi] und Link:https://forum.jeedom.fr/viewtopic.php?f=58&t=417&hilit=xml&start=30#p7390[içi]

----
<root>
    <led0>1</led0>
    <leds>
      <led1>toto</led1>
    </leds>
</root>
----

Falls Sie den Wert von led0 abfragen wollen, setzen Sie led0 .
Wenn Sie wollen, dass der Wert der led1 der Sohn von LEDs ist, setzen Sie LEDs > led1.


Beachten Sie, dass die Wurzel <root> nicht im Abfragefeld angegeben ist.

===== Für eine komplexere XML (Verteilung Tabelle)

----
 <root>
   <led0>1</led0>
   <leds>
     <led1>toto</led1>
   </leds>
   <leds>
     <led1>tata</led1>
   </leds>
 </root>
----

die Syntax ist :

leds > 1 > led1 gibt als Antwort tata, wobei 1 die Rangnummer der Tabelle! 

==== Skripttyp : JSON
Wie beim XML-Typ, ist es möglich, Informationen aus einer JSON Rückkehr aus zu lesen.

Um zu erklären, werde ich mich auf JSON Sickbeard Informationen mit der Anwendung (bouh ... cpasbien) stützen, aber hier nur die Premium-Technik, nicht das Werkzeug!

Der Zugriff auf diese Datei ist möglich dank der folgenden URL :

http://<IP_DELAMACHINEQUIEBERGESICKBEARD>:8083/api/XXXX/?cmd=history&limit=3

HINWEIS :  Die Schlüsselnummer XXXX ist einzigartig für jede SICKBEARD API.

Als erstes, vor dem Start in die Konfiguration des JSON Skript Plugins, sie richtig Identifizierungsinformationen abrufen. Car ici nous allons intégrer une notion de tableau dans les retours.

Bestätigen Sie die Informationsanzeige über den Browser (test unter Chrome) 

Beispiel für Rückkehr:

----
 {
     "data": [
         {
             "date": "2014-09-10 01:37", 
             "episode": 4, 
             "provider": "RNT", 
             "quality": "SD TV", 
             "resource": "XXX", 
             "resource_path": "XXXX", 
             "season": 2, 
             "show_name": "Totovaalaplage S2E4", 
             "status": "Downloaded", 
             "tvdbid": XXXXX
         }, 
         {
             "date": "2014-09-10 01:36", 
             "episode": 3, 
             "provider": "RNT", 
             "quality": "SD TV", 
             "resource": "XXXX", 
             "resource_path": "XXX", 
             "season": 2, 
             "show_name": "Totovaalaplage S2E3", 
             "status": "Downloaded", 
             "tvdbid": XXXXX
         }, 
         {
             "date": "2014-09-10 01:21", 
             "episode": 1, 
             "provider": "Cpasbien", 
             "quality": "SD TV", 
             "resource": "XXXX", 
             "resource_path": "XXXX", 
             "season": 1, 
 ICI -->     "show_name": "Totovaplusauski mais Totovaalaplage S1E1", 
             "status": "Snatched", 
             "tvdbid": XXXX
         }
     ], 
     "message": "", 
     "result": "success"
 }
----

Für den Fall, dass wir die show_name das dritte Element in php (hier markiert) zurückkehren, sollte es sein: data > 2 >show_name, die Rückkehr Array-Index beginnt bei Null.

In diesem Beispiel wird die Schaltfläche "Test" uns zurückbringen "Totovaplusauski mais Totovaalaplage S1E1".

Einzelheiten : 

Beachten Sie die Syntax der Befehls Abfrage, sie ist von Typ element0 > Array-Index >  element1

Nachteile : 

- dieser Methode ist nur um ein einzelnes Element zu einem Zeitpunkt abzurufen. 
- Wenn man wünscht, die Gesamtheit der Werte von "Show_name" umzudrehen, ist das leider nicht möglich, man muss das Skript so viel male kopieren wie benötigt wird.

ABER es gibt eine kleine Subtilität dank der Variable #state#, das wird von einem privaten Abschnitt Gegenstand sein. 

==== Die Variable #state#
Diese Variable ist die Verbindung zwischen unseren Skripten und zugehörigen Widgets.

Erstellen Sie ein neues Widget, zum Beispiel so:

Tags #name# enthält den Namen des Widgets.

Tags #state# enthält die Rückkehr unseres scripts (die von dem Echo-Befehl im Fall von einem PHP-Skript-Typ oder für python zurückgegeben wird ).
- Dieser Tag wird von Jeedom als HTML interpretiert
- elle est donc personnalisable, mais attention, nous allons toucher les limites de l'ouverture de Jeedom , 

Es ist auf diesem Tags werden wir unsere Anstrengungen konzentrieren:

Wenn Sie neugierig sind, im vorherigen Beispiel die Zeile am Ende des Skripts sah aus wie:
 echo  $show_name." S".$saison."/E".$episode." ".$episode_name."<\br>";
Die Variable #state# nimmt also den von der Echofunktion zurückgesandten Wert, in diesem Fall 3 Strings gefolgt von einem Wagenrücklauf

So können wir sehen was wir wollen, mit einem Minimum von eigenen Jeedom Code , zum Beispiel ein vollständiges Bild.
